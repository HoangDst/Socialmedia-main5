<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.network</groupId>
        <artifactId>socialmedia</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <groupId>com.example</groupId>
    <artifactId>common-data</artifactId>

    <properties>
        <maven.compiler.source>20</maven.compiler.source>
        <maven.compiler.target>20</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <org.mapstruct.version>1.5.5.Final</org.mapstruct.version>
    </properties>
<build>
    <plugins>
        <plugin>

            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen-maven</artifactId>

            <executions>
                <execution>
                    <phase>generate-sources</phase>
                    <goals>
                        <goal>generate</goal>
                    </goals>
                    <configuration>
                        <!-- Configure the database connection here -->
                        <jdbc>
                            <driver>com.mysql.cj.jdbc.Driver</driver>
                            <url>jdbc:mysql://localhost:3306/socialmedia</url>
                            <user>developer</user>
                            <password>123456aA@</password>
                        </jdbc>

                        <generator>
                            <!-- The default code generator. You can override this one, to generate your own code style.
                                 Supported generators:
                                 - org.jooq.codegen.JavaGenerator
                                 - org.jooq.codegen.KotlinGenerator
                                 - org.jooq.codegen.ScalaGenerator
                                 Defaults to org.jooq.codegen.JavaGenerator -->
                            <name>org.jooq.codegen.JavaGenerator</name>

                            <database>
                                <!-- The database type. The format here is:
                                     org.jooq.meta.[database].[database]Database -->
                                <name>org.jooq.meta.mysql.MySQLDatabase</name>

                                <!-- The database schema (or in the absence of schema support, in your RDBMS this
                                     can be the owner, user, database name) to be generated -->
                                <inputSchema>socialmedia</inputSchema>

                                <!-- All elements that are generated from your schema
                                     (A Java regular expression. Use the pipe to separate several expressions)
                                     Watch out for case-sensitivity. Depending on your database, this might be important! -->
                                <includes>.*</includes>

                                <!-- All elements that are excluded from your schema
                                     (A Java regular expression. Use the pipe to separate several expressions).
                                     Excludes match before includes, i.e. excludes have a higher priority -->
                                <excludes></excludes>
                            </database>
                            <generate>
                                <pojos>true</pojos>
                                <pojosEqualsAndHashCode>
                                    true
                                </pojosEqualsAndHashCode>
                                <javaTimeTypes>true</javaTimeTypes>
                                <fluentSetters>true</fluentSetters>
                            </generate>

                            <target>
                                <!-- The destination package of your generated classes (within the destination directory) -->
                                <packageName>com.hm.social</packageName>

                                <!-- The destination directory of your generated classes. Using Maven directory layout here -->
                                <directory>target/generated-sources/jooq</directory>
                            </target>
                        </generator>
                    </configuration>
                </execution>
            </executions>

        </plugin>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.8.1</version>
            <configuration>
                <source>11</source> <!-- depending on your project -->
                <target>11</target> <!-- depending on your project -->
                <annotationProcessorPaths>
                    <path>
                        <groupId>org.projectlombok</groupId>
                        <artifactId>lombok</artifactId>
                        <version>1.18.20</version>
                    </path>
                    <path>
                        <groupId>org.projectlombok</groupId>
                        <artifactId>lombok-mapstruct-binding</artifactId>
                        <version>0.2.0</version>
                    </path>
                    <path>
                        <groupId>org.mapstruct</groupId>
                        <artifactId>mapstruct-processor</artifactId>
                        <version>1.5.3.Final</version>
                    </path>
                    <!-- other annotation processors -->
                </annotationProcessorPaths>
            </configuration>
        </plugin>

    </plugins>
</build>

</project>